============================
Chapel third-party directory
============================

This directory is designed to hold sources that were not developed by
the Chapel team and which are released under distinct licenses from
Chapel itself.  Current subdirectories include:


creoleparser/
  Summary: This is a directory in which the python Creoleparser
           package will be downloaded when running 'make creoleparser'
           in the third-party directory.  It also relies on an
           additional Python package 'Genshi' which will be downloaded
           if it is not found within your path

  License: MIT (Genshi is Revised BSD)

  Contact: For more information, please refer to:
             http://pypi.python.org/pypi/Creoleparser
           and
             http://genshi.edgewall.org/


dlmalloc/
  Summary: Doug Lea's memory allocator (dlmalloc) which we use to
           support malloc/free calls when running GASNet programs
           using segment fast.

  License: dlmalloc has been placed in the public domain as explained
           at http://creativecommons.org/publicdomain/zero/1.0/

  Contact: For more information, please refer to:
           http://g.oswego.edu/dl/html/malloc.html

  See also: the comments in dlmalloc/src/dlmalloc.c


gasnet/
  Summary: the Berkeley GASNet library for one-sided communication
           which we use as a communication layer to implement Chapel's
           support for multi-locale/distributed-memory systems.

  License: GASNet is made available under a BSD-style license, which
           can be found in gasnet/GASNet-<version>/license.txt

  Contact: For more information, please refer to: 
           http://gasnet.cs.berkeley.edu

  See also: gasnet/README


gmp/
  Summary: the GNU Multiple Precision Arithmetic Library

  License: L-GPL (see gmp/gmp-*/COPYING and gmp/gmp-*/COPYING.LIB)

  Contact: For more information, please refer to: http://gmplib.org

  See also: gmp/README and gmp/gmp-*/README


massivethreads/
  Summary: MassiveThreads is a lightweight thread library being
           developed by the University of Tokyo.  This package
           represents another lighter-weight tasking alternative
           to the default fifo/pthreads choice.

  License: MassiveThreads is released under the Simplified BSD License,
           which can be found in:
             massivethreads/massivethreads-<version>/COPYRIGHT

  Contact: For more information, please refer to:
             http://code.google.com/p/massivethreads/

  See also: massivethreads/massivethreads-<version>/README


nanox/
  Summary: the Nanos++ user-level tasking library being developed by
           Barcelona Supercompting Center (BSC).  We are working on
           using this as a lighter-weight tasking alternative to
           pthreads.

  License: Nanos++ is made available under an L-GPL license (see
           nanox-<version>/COPYING and COPYING.LESSER)

  Contact: For more information, please refer to:
           http://pm.bsc.es/projects/nanox

  See also: nanox/README and nanox/nanox-*/*


qthread/ 
  Summary: the Qthreads user-level tasking package being developed by
           Sandia National Laboratory.  We are working on using this
           as a lighter-weight tasking alternative to pthreads.

  License: Qthreads is released under the New BSD License, which can
           be found in qthread/qthread-<version>/COPYING

  Contact: For more information, please refer to:
           http://code.google.com/p/qthreads/
           http://www.cs.sandia.gov/qthreads/

  See also: qthread/qthread-*/README


tcmalloc/
  Summary: the Google perf-tools memory allocator (tcmalloc) which we
           use to support malloc/free calls when running programs using
           Cray's Gemini network interconnect chip

  License: Google-perftools is released under the New BSD License (see
           tcmalloc/google-perftools-*/COPYING)

  Contact: For more information, please refer to:
           http://code.google.com/p/google-perftools/

  See also: tcmalloc/README


utf8-decoder/
  Summary: A fast UTF-8 decoder, used for fast UTF-8 I/O.
           This decoder is by Bjoern Hoehrmann.

  License: MIT (see utf8-decoder/README)

  Contact: For more information, please refer to:
           http://bjoern.hoehrmann.de/utf-8/decoder/dfa/

  See also: utf8-decoder/README


